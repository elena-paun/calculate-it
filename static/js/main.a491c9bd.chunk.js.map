{"version":3,"sources":["components/Context/NumberContext.js","components/NumberButton.js","components/FunctionButton.js","components/ClearButton.js","components/Result.js","components/BackButton.js","components/Equal.js","components/NegativeButton.js","components/Zero.js","components/Keypad.js","App.js","index.js"],"names":["NumberContext","createContext","NumberProvider","children","useState","number","setNumber","storedNumber","setStoredNumber","functionType","setFunctionType","handleSetStoredValue","Provider","value","handleClearValue","handleSetDisplayValue","num","includes","length","replace","handleBackButton","substring","handleSetCalcFunction","type","math","Math","round","parseFloat","console","log","handleNegative","positiveNumber","slice","Button","styled","button","NumberButton","sign","useContext","onClick","FunctionButton","ClearButton","Result","result","StyledResult","div","BackButton","Equal","Negative","Zero","Keypad","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a491c9bd.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const NumberContext = createContext();\r\n\r\nexport const NumberProvider = ({ children }) => {\r\n  const [number, setNumber] = useState(\"0\");\r\n  const [storedNumber, setStoredNumber] = useState(\"\");\r\n  const [functionType, setFunctionType] = useState(\"\");\r\n  const handleSetDisplayValue = (num) => {\r\n    if ((!number.includes(\".\") || num !== \".\") && number.length < 8) {\r\n      setNumber(`${(number + num).replace(/^0+/, \"\")}`);\r\n    }\r\n  };\r\n  const handleSetStoredValue = () => {\r\n    setStoredNumber(number);\r\n    setNumber(\"\");\r\n  };\r\n  const handleClearValue = () => {\r\n    setNumber(\"0\");\r\n  };\r\n  const handleBackButton = () => {\r\n    if (number === \"\") setNumber(\"0\");\r\n\r\n    setNumber(number.substring(0, number.length - 1));\r\n  };\r\n  const handleSetCalcFunction = (type) => {\r\n    if (number) {\r\n      setFunctionType(type);\r\n      handleSetStoredValue();\r\n    }\r\n    if (storedNumber) {\r\n      setFunctionType(type);\r\n    }\r\n  };\r\n  const handleNegative = () => {\r\n    if (number) {\r\n      if (number > 0) {\r\n        setNumber(`-${number}`);\r\n      } else {\r\n        const positiveNumber = number.slice(1);\r\n        setNumber(positiveNumber);\r\n      }\r\n    } else if (storedNumber > 0) {\r\n      setStoredNumber(`-${storedNumber}`);\r\n    } else {\r\n      const positiveNumber = storedNumber.slice(1);\r\n      setStoredNumber(positiveNumber);\r\n    }\r\n  };\r\n  const math = () => {\r\n    if (number && storedNumber) {\r\n      switch (functionType) {\r\n        case \"+\":\r\n          setStoredNumber(\r\n            `${\r\n              Math.round(\r\n                `${(parseFloat(storedNumber) + parseFloat(number)) * 100}`\r\n              ) / 100\r\n            }`\r\n          );\r\n          break;\r\n        case \"-\":\r\n          setStoredNumber(\r\n            `${\r\n              Math.round(\r\n                `${(parseFloat(storedNumber) - parseFloat(number)) * 100}`\r\n              ) / 100\r\n            }`\r\n          );\r\n          break;\r\n        case \"x\":\r\n          setStoredNumber(\r\n            `${\r\n              Math.round(\r\n                `${parseFloat(storedNumber) * parseFloat(number) * 1000}`\r\n              ) / 1000\r\n            }`\r\n          );\r\n          break;\r\n        case \"/\":\r\n          setStoredNumber(\r\n            `${\r\n              Math.round(\r\n                `${(parseFloat(storedNumber) / parseFloat(number)) * 1000}`\r\n              ) / 1000\r\n            }`\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    console.log(number, storedNumber);\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <NumberContext.Provider\r\n      value={{\r\n        handleSetStoredValue,\r\n        handleClearValue,\r\n        handleSetDisplayValue,\r\n        handleBackButton,\r\n        handleSetCalcFunction,\r\n        number,\r\n        math,\r\n        storedNumber,\r\n        setNumber,\r\n        handleNegative,\r\n      }}\r\n    >\r\n      {children}\r\n    </NumberContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Button = styled.button`\r\n  background-color: #425062;\r\n  color: white;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const NumberButton = ({ sign }) => {\r\n  const { handleSetDisplayValue } = useContext(NumberContext);\r\n\r\n  return <Button onClick={() => handleSetDisplayValue(sign)}>{sign}</Button>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Button = styled.button`\r\n  background-color: #425062;\r\n  color: white;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  display: inline-block;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const FunctionButton = ({ sign }) => {\r\n  const { handleSetCalcFunction } = useContext(NumberContext);\r\n  return (\r\n    <Button type=\"button\" onClick={() => handleSetCalcFunction(sign)}>\r\n      {sign}\r\n    </Button>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Button = styled.button`\r\n  background-color: #425062;\r\n  color: red;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  display: inline-block;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const ClearButton = ({ sign }) => {\r\n  const { handleClearValue } = useContext(NumberContext);\r\n  return <Button onClick={handleClearValue}>C</Button>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Result = ({ result }) => {\r\n  const { number, storedNumber } = useContext(NumberContext);\r\n  const StyledResult = styled.div`\r\n    position: relative;\r\n    width: auto;\r\n    margin-bottom: 30px;\r\n    border-radius: 25px;\r\n    font-family: \"Montserrat\";\r\n    color: white;\r\n    height: 80px;\r\n    text-align: right;\r\n    padding-right: 20px;\r\n    padding-top: 50px;\r\n    font-size: x-large;\r\n    box-shadow: inset 0px 0px 20px -10px rgba(0, 0, 0, 0.75);\r\n  `;\r\n  return (\r\n    <StyledResult>\r\n      {!number.length && !storedNumber ? \"0\" : number || storedNumber}\r\n    </StyledResult>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nconst Button = styled.button`\r\n  background-color: #425062;\r\n  color: white;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  display: inline-block;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const BackButton = () => {\r\n  const { handleBackButton } = useContext(NumberContext);\r\n  return <Button onClick={handleBackButton}>&#8592;</Button>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Button = styled.button`\r\n  background-color: #425062;\r\n  color: white;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  display: inline-block;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const Equal = () => {\r\n  const { math } = useContext(NumberContext);\r\n  return <Button onClick={math}>=</Button>;\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Button = styled.button`\r\n  background-color: #425062;\r\n  color: white;\r\n  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n    0 10px 80px rgba(0, 0, 0, 0.12);\r\n  border-radius: 25px;\r\n  border: none;\r\n  width: 100px;\r\n  height: 100px;\r\n  font-family: Montserrat;\r\n  margin: 5px;\r\n  display: inline-block;\r\n  font-size: x-large;\r\n  @media (max-width: 415px) {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 12.5px;\r\n    font-size: medium;\r\n  }\r\n`;\r\nexport const Negative = () => {\r\n  const { handleNegative } = useContext(NumberContext);\r\n  return <Button onClick={handleNegative}>+/-</Button>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NumberContext } from \"./Context/NumberContext\";\r\nexport const Zero = ({ sign }) => {\r\n  const Button = styled.button`\r\n    background-color: #425062;\r\n    color: white;\r\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n      0 10px 80px rgba(0, 0, 0, 0.12);\r\n    border-radius: 25px;\r\n    border: none;\r\n    width: 46%;\r\n    height: 100px;\r\n    font-family: Montserrat;\r\n    margin: 5px;\r\n    font-size: x-large;\r\n    @media (max-width: 415px) {\r\n      width: 46%;\r\n      height: 50px;\r\n      border-radius: 12.5px;\r\n      font-size: medium;\r\n    }\r\n  `;\r\n\r\n  const { handleSetDisplayValue } = useContext(NumberContext);\r\n\r\n  return <Button onClick={() => handleSetDisplayValue(sign)}>{sign}</Button>;\r\n};\r\n","import React from \"react\";\r\nimport { NumberButton } from \"./NumberButton\";\r\nimport { FunctionButton } from \"./FunctionButton\";\r\nimport { ClearButton } from \"./ClearButton\";\r\nimport styled from \"styled-components\";\r\nimport { Result } from \"./Result\";\r\nimport { BackButton } from \"./BackButton\";\r\nimport { Equal } from \"./Equal\";\r\nimport { Negative } from \"./NegativeButton\";\r\nimport { Zero } from \"./Zero\";\r\nexport const Keypad = () => {\r\n  const Container = styled.div`\r\n    position: relative;\r\n    margin: auto;\r\n    text-align: center;\r\n    box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n      0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n      0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n      0 10px 80px rgba(0, 0, 0, 0.12);\r\n    width: fit-content;\r\n    border-radius: 50px;\r\n    background-color: #3a4655;\r\n    padding: 40px;\r\n    margin-top: 20px;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <Result />\r\n      <ClearButton />\r\n      <BackButton />\r\n      <Negative /> <FunctionButton sign=\"x\" />\r\n      <br />\r\n      <NumberButton sign={7} />\r\n      <NumberButton sign={8} />\r\n      <NumberButton sign={9} />\r\n      <FunctionButton sign=\"-\" />\r\n      <br />\r\n      <NumberButton sign={4} />\r\n      <NumberButton sign={5} />\r\n      <NumberButton sign={6} />\r\n      <FunctionButton sign=\"+\" />\r\n      <br />\r\n      <NumberButton sign={1} />\r\n      <NumberButton sign={2} />\r\n      <NumberButton sign={3} />\r\n      <FunctionButton sign=\"/\" />\r\n      <br />\r\n      <Zero sign={0} />\r\n      <NumberButton sign=\".\" />\r\n      <Equal />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Keypad } from \"./components/Keypad\";\nimport { NumberProvider } from \"./components/Context/NumberContext\";\nfunction App() {\n  return (\n    <NumberProvider>\n      <Keypad />\n    </NumberProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}